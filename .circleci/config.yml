version: 2
jobs:
  build:
    working_directory: ~/django-enum-choices
    docker:
      - image: circleci/python:3.6.7-stretch
        environment:
          DATABASE_URL: postgresql://root@localhost/test_django_enum_choices?sslmode=disable
          MYSQL_USER: root
      - image: circleci/postgres:10.10
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: test_django_enum_choices
      - image: circleci/mysql:5.7.27
        environment:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: django_enum_choices_mysql
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for PostgreSQL DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for MySQL DB
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages

      - restore_cache:
          keys:
            - python-versions-cache
      - run:
          name: Install Python versions
          command: |
            sudo apt-get update
            sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
            libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
            xz-utils tk-dev libffi-dev liblzma-dev python-openssl git
            [ ! -d "/home/circleci/.pyenv" ] && curl https://pyenv.run | bash
            export PATH="$HOME/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            pyenv install 3.5.7 --skip-existing
            pyenv install 3.6.4 --skip-existing
            pyenv install 3.7.0 --skip-existing
      - save_cache:
          paths:
            - /home/circleci/.pyenv/
          key:
            python-versions-cache

      - run:
          command: |
            export PATH="$HOME/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"
            pip install tox tox-pyenv
            pyenv local 3.5.7 3.6.4 3.7.0
            tox
            pyenv local 3.7.0
            pip install -e .[dev]
            cd django_enum_choices/tests/e2e && python3 tests.py
